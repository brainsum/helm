{{- if eq (.Values.dedicatedFrontend.enable | default false) true }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.global.project }}-{{ .Values.global.environment }}-frontend-ingress
  labels:
    {{- include "common.labels" . | indent 4 }}
    app.kubernetes.io/component: ingress
    deployment: {{ .Values.global.project }}-{{ .Values.global.environment }}-frontend-app
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/cookie-based-affinity: "true"
    appgw.ingress.kubernetes.io/request-timeout: {{ .Values.dedicatedFrontend.ingress.requestTimeout | default "180" | quote }}
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: {{ .Values.gracefulUpdate.connectionDrainTimeout | default "15" | quote }}
    {{- if eq .Values.dedicatedFrontend.ingress.sslRedirect true }}
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    {{- end }}
    {{- if eq (.Values.dedicatedFrontend.ingress.certManager.enable | default false) true }}
    cert-manager.io/cluster-issuer: {{ required "dedicatedFrontend.ingress.certManager.issuer is required" .Values.dedicatedFrontend.ingress.certManager.issuer | quote }}
    cert-manager.io/acme-challenge-type: {{ required "dedicatedFrontend.ingress.certManager.challengeType is required" .Values.dedicatedFrontend.ingress.certManager.challengeType | quote }}
    {{- end }}
spec:
  {{- /* @todo: Look out for new K8s/AGIC features, it's possible that we are not going to need this range-nonesense in the future. */}}
  {{- if .Values.dedicatedFrontend.ingress.tlsSecret }}
  tls:
    - hosts:
        - {{ .Values.dedicatedFrontend.ingress.host }}
          {{- if not (.Values.dedicatedFrontend.ingress.additionalHosts | empty) -}}
          {{ toYaml .Values.dedicatedFrontend.ingress.additionalHosts | nindent 8 }}
      {{- end }}
      secretName: {{ .Values.dedicatedFrontend.ingress.tlsSecret }}
  {{- end }}
  rules:
    - host: {{ .Values.dedicatedFrontend.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.global.project }}-{{ .Values.global.environment }}-frontend-app-service
                port:
                  name: http
          {{- if not (.Values.dedicatedFrontend.ingress.additionalPaths | empty) -}}
          {{ toYaml .Values.dedicatedFrontend.ingress.additionalPaths | nindent 10 }}
      {{- end }}
      {{- if not (.Values.dedicatedFrontend.ingress.additionalHosts | empty) -}}
      {{- range $.Values.dedicatedFrontend.ingress.additionalHosts -}}
      {{- include "frontend-ingress.rule" (merge (dict "host" . "_isFrontend" true) $.Values) | nindent 4 -}}
    {{- end -}}
  {{- end }}
{{- end -}}