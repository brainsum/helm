apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.project }}-{{ .Values.global.environment }}-app
  labels:
    {{- include "common.labels" . | indent 4 }}
    app.kubernetes.io/component: app
    deployment: {{ .Values.global.project }}-{{ .Values.global.environment }}-app
  {{- if eq (.Values.annotateDeployment | default false) true }}
  annotations:
    timestamp: {{ now | date "2006-01-02_15-04-05" | quote }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "deployment.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        {{- include "deployment.selectorLabels" . | indent 8 }}
    spec:
      securityContext:
        fsGroup: 1000
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      # @todo: Does this handle multiple containers writing at the same time?
      volumes:
      {{- include "common.volumes" . | indent 6 -}}
      {{- include "drupal.volumes" . | indent 6 -}}
      terminationGracePeriodSeconds: {{ .Values.gracefulUpdate.terminationGracePeriodSeconds }}
      containers:
        {{- include "drupal.deployment.containerSpec" . | indent 8 -}}
        - image: {{ .Values.nginxImage }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          name: nginx
          ports:
            - name: http
              containerPort: {{ .Values.nginxTargetPort | default 8080 }}
          volumeMounts:
          {{- include "common.mounts" . | indent 10 -}}
          {{- include "nginx.mounts" . | indent 10 -}}
          resources:
            requests:
              cpu: "10m"
              memory: "32Mi"
            limits:
              cpu: "200m"
              memory: "128Mi"
          lifecycle:
            preStop:
            {{- include "common.deployment.lifecyle.preStop" . | indent 14 }}
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 8
            httpGet:
              port: http
              path: /user/login
              httpHeaders:
                - name: "Host"
                  value: {{ .Values.ingress.host | trim | quote }}
              scheme: HTTP
