apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.project }}-{{ .Values.global.environment }}-app
  labels:
    {{- include "common.labels" . | indent 4 }}
    app.kubernetes.io/component: app
    deployment: {{ .Values.global.project }}-{{ .Values.global.environment }}-app
spec:
  selector:
    matchLabels:
      {{- include "deployment.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        {{- include "deployment.selectorLabels" . | indent 8 }}
      {{- if eq (.Values.annotateDeployment | default false) true }}
      annotations:
        timestamp: {{ now | date "2006-01-02_15-04-05" | quote }}
      {{- end }}
    spec:
      securityContext:
        fsGroup: 1000
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      # @todo: Does this handle multiple containers writing at the same time?
      volumes:
      {{- include "common.volumes" . | indent 6 -}}
      {{- include "drupal.volumes" . | indent 6 -}}
      terminationGracePeriodSeconds: {{ .Values.gracefulUpdate.terminationGracePeriodSeconds }}
      containers:
        {{- include "drupal.deployment.containerSpec" . | indent 8 -}}
        - image: {{ .Values.nginxImage }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          name: nginx
          ports:
            - name: http
              containerPort: {{ .Values.nginxTargetPort | default 8080 }}
            - name: fpm-health
              containerPort: {{ .Values.nginxFpmHealthPort | default 8080 }}
            - name: nginx-health
              containerPort: {{ .Values.nginxHealthPort | default 8080 }}
          volumeMounts:
          {{- include "common.mounts" . | indent 10 -}}
          {{- include "nginx.mounts" . | indent 10 -}}
          resources:
            requests:
              cpu: {{ .Values.jobCpuRequest | default "10m" | quote }}
              memory: {{ .Values.jobMemoryRequest | default "32Mi" | quote }}
            limits:
              cpu: {{ .Values.jobCpuLimit | default "200m" | quote }}
              memory: {{ .Values.jobMemoryLimit | default "128Mi" | quote }}
          lifecycle:
            # @todo: Graceful shutdown needed:
            # command: ["/bin/sh", "-c", "sleep 5; /usr/local/openresty/nginx/sbin/nginx -c /etc/nginx/nginx.conf -s quit; while pgrep -x nginx; do sleep 1; done"]
            preStop:
            {{- include "common.deployment.lifecyle.preStop" . | indent 14 }}
          {{- if not (.Values.nginxLivenessProbe | empty) }}
          livenessProbe:
            {{- toYaml .Values.nginxLivenessProbe | nindent 12 }}
          {{- else }}
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 8
            httpGet:
              port: nginx-health
              path: {{ .Values.nginxHealthPath | default "/user/login" | quote }}
              httpHeaders:
                - name: "Host"
                  value: {{ .Values.ingress.host | trim | quote }}
              scheme: HTTP
          {{- end }}
          {{- if not (.Values.nginxReadinessProbe | empty) }}
          readinessProbe:
            {{- toYaml .Values.nginxReadinessProbe | nindent 12 }}
          {{- end }}
