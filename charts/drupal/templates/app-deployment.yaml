apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.project }}-{{ .Values.global.environment }}-app
  labels:
    {{- include "common.labels" . | indent 4 }}
    app.kubernetes.io/component: app
    deployment: {{ .Values.global.project }}-{{ .Values.global.environment }}-app
  annotations:
    {{- include "drupal.configChecksums" . | nindent 4 -}}
    {{- if eq .Values.robotsOverride.enable true }}
    {{- if .Values.robotsOverride.existingConfig | empty }}
    checksum/robots-config: {{ include (print $.Template.BasePath "/robots-config.yaml") . | sha256sum }}
    {{- end }}
    {{- end }}
  {{- if eq (.Values.annotateDeployment | default false) true }}
    timestamp: {{ now | date "2006-01-02_15-04-05" | quote }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "deployment.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        {{- include "deployment.selectorLabels" . | indent 8 }}
      {{- if eq (.Values.annotateDeployment | default false) true }}
      annotations:
        timestamp: {{ now | date "2006-01-02_15-04-05" | quote }}
      {{- end }}
    spec:
      {{- if not (.Values.appNodeSelector | empty) }}
      nodeSelector:
        {{- .Values.appNodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if not (.Values.appTolerations | empty) }}
      tolerations:
        {{- .Values.appTolerations | toYaml | nindent 8 }}
      {{- end }}
      securityContext:
        fsGroup: 1000
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      # @todo: Does this handle multiple containers writing at the same time?
      volumes:
      {{- include "common.volumes" . | indent 6 -}}
      {{- include "drupal.volumes" . | indent 6 -}}
      {{- include "drupal.robots.volumes" . | nindent 6 }}
      terminationGracePeriodSeconds: {{ .Values.gracefulUpdate.terminationGracePeriodSeconds | default "15" }}
      containers:
        {{- include "drupal.deployment.containerSpec" . | indent 8 -}}
        - image: {{ .Values.nginxImage }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          name: nginx
          ports:
            - name: http
              containerPort: {{ .Values.nginxTargetPort | default 8080 }}
            - name: nginx-health
              containerPort: {{ .Values.nginxHealthPort | default 8080 }}
          volumeMounts:
          {{- include "common.mounts" . | indent 10 -}}
          {{- include "nginx.mounts" . | indent 10 -}}
          env:
            - name: NGINX_HEALTH_PORT
              value: {{ .Values.nginxHealthPort | default 8080 | quote }}
            - name: NGINX_TARGET_PORT
              value: {{ .Values.nginxTargetPort | default 8080 | quote }}
            {{- if not (.Values.nginxExtraEnvVars | empty) -}}
            {{ toYaml .Values.nginxExtraEnvVars | nindent 12 }}
            {{- end }}
          resources:
            requests:
              cpu: {{ .Values.nginxCpuRequest | default "10m" | quote }}
              memory: {{ .Values.nginxMemoryRequest | default "32Mi" | quote }}
            limits:
              cpu: {{ .Values.nginxCpuLimit | default "200m" | quote }}
              memory: {{ .Values.nginxMemoryLimit | default "128Mi" | quote }}
          lifecycle:
            # @todo: Graceful shutdown needed:
            # command: ["/bin/sh", "-c", "sleep 5; /usr/local/openresty/nginx/sbin/nginx -c /etc/nginx/nginx.conf -s quit; while pgrep -x nginx; do sleep 1; done"]
            preStop:
            {{- include "common.deployment.lifecyle.preStop" . | indent 14 }}
          {{- if not (.Values.nginxLivenessProbe | empty) }}
          livenessProbe:
            {{- toYaml .Values.nginxLivenessProbe | nindent 12 }}
          {{- else }}
          livenessProbe:
            exec:
              command:
                - "/bin/sh"
                - "-c"
                - "/usr/bin/curl --silent --show-error --fail --header 'Host: internal.health' http://127.0.0.1:${NGINX_HEALTH_PORT}/status"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          {{- end }}
          {{- if not (.Values.nginxReadinessProbe | empty) }}
          readinessProbe:
            {{- toYaml .Values.nginxReadinessProbe | nindent 12 }}
          {{- else }}
          readinessProbe:
            exec:
              command:
                - "/bin/sh"
                - "-c"
                - "/usr/bin/curl --silent --show-error --fail --header 'Host: internal.health' http://127.0.0.1:${NGINX_HEALTH_PORT}/healthz"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          {{- end }}
          {{- if not (.Values.nginxStartupProbe | empty) }}
          startupProbe:
            {{- toYaml .Values.nginxStartupProbe | nindent 12 }}
          {{- end }}
