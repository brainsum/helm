global:
  storageClass: "azurefile-premium"
  project: "drupal"
  environment: "production"

imagePullPolicy: "Always"
imagePullSecret: "drupal-acr-cred"
drupalImage: "drupalcr.azurecr.io/brainsum/drupal-app:latest"
nginxImage: "drupalcr.azurecr.io/brainsum/drupal-nginx:latest"

# Setting this to "true" adds a timestamp annotation with the current date.
annotateDeployment: false

# Allows setting the port for nginx. It's recommended to use non-root containers which can only bind higher numbered ports.
#nginxTargetPort: 8080

ingress:
  host: "mysite.com"
  tlsSecret: "mysite-tls-secret"
  sslRedirect: false
  requestTimeout: 60
#  additionalPaths:
#    - path: /
#      backend:
#        serviceName: another-service
#        servicePort: 80
#  additionalHosts:
#    - www.mysite.com
#    - mysite.net

# This is useful for disallowing robots access for e.g. a dev site.
robotsOverride:
  enable: true
  existingConfig: ""

appDatabaseHost: "drupal-database-mariadb.drupal.svc.cluster.local"

#drupalLivenessProbe:
#  initialDelaySeconds: 5
#  periodSeconds: 10
#  timeoutSeconds: 5
#  failureThreshold: 5
#  exec:
#    command:
#      - /usr/local/bin/php-fpm-healthcheck
#drupalReadinessProbe:
#  initialDelaySeconds: 5
#  periodSeconds: 10
#  timeoutSeconds: 5
#  failureThreshold: 5
#  exec:
#    command:
#      - /usr/local/bin/php-fpm-healthcheck
#nginxLivenessProbe:
#  initialDelaySeconds: 5
#  periodSeconds: 10
#  timeoutSeconds: 5
#  failureThreshold: 8
#  exec:
#    command:
#      - /usr/bin/curl
#      - 127.0.0.1:9002/ping
#nginxReadinessProbe:
#  initialDelaySeconds: 5
#  periodSeconds: 10
#  timeoutSeconds: 5
#  failureThreshold: 8
#  exec:
#    command:
#      - /usr/bin/curl
#      - 127.0.0.1:9002/ping

#drupalFpmPort: 9000
#drupalFpmHealthPort: 9001

#nginxTargetPort: 8080
#nginxHealthPort: 9002

#nginxHealthPath: /ping

#jobCpuRequest: "10m"
#jobMemoryRequest: "32Mi"
#jobCpuLimit: "1000m"
#jobMemoryLimit: "2048Mi"

#drupalCpuRequest: "10m"
#drupalMemoryRequest: "32Mi"
#drupalCpuLimit: "800m"
#drupalMemoryLimit: "512Mi"

#nginxCpuRequest: "10m"
#nginxMemoryRequest: "32Mi"
#nginxCpuLimit: "200m"
#nginxMemoryLimit: "128Mi"

# What should go into cron, results in "bash -c commandArg".
#drupalCronJob:
#  commandArg: "drush cron && drush node-access-rebuild-progressive:rebuild"

appStorage:
  class: "drupal-storage"
  size: "5Gi"

backupStorage:
  class: "drupal-storage"
  size: "5Gi"

gracefulUpdate:
  preStopTimeout: 60
  terminationGracePeriodSeconds: 70
  connectionDrainTimeout: 30

rollback:
  backupVersion: "latest"

drupalSettingsDir: "/var/www/html/settings"
drupalExtraEnvVars: []
drupalExtraSettings:
  volumes:
    - name: email-settings
      secret:
        secretName: drupal-production-app-settings
        items:
          - key: settings.email.php
            path: settings.email.php
  mounts:
    - name: email-settings
      mountPath: /var/www/html/settings/settings.email.php
      subPath: settings.email.php
      readOnly: true

trustedHosts:
  enable: false
  existingConfig: ""
  # @note: Additional hosts only works if existingConfig is not set.
#  additionalHosts:
#    - 'localhost'
#    - 'drupal.docker.localhost'

solr:
  enable: false
  # When existingConfig is used, host and core are ignored.
  existingConfig: ""
  host: "solr-solrcloud-headless.drupal.svc.cluster.local"
  core: "dislaw-solr-collection"

  # When existingSecret is used, username and password are ignored.
  authenticate: false
  existingSecret: ""
  username: ""
  password: ""

# @todo: Add to templates + env.
# @todo: Use configmap/secret instead vs allow using custom ones.
redis:
  enable: false
  # When existingConfig is used, host is ignored.
  existingConfig: ""
  host: "drupal-cache-redis-master.drupal.svc.cluster.local"

  # When existingSecret is used, password is ignored.
  authenticate: false
  existingSecret: ""
  password: ""
